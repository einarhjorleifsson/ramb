% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dc_split_among_pings.R
\name{dc_split_among_pings}
\alias{dc_split_among_pings}
\title{Distribute logbook catch/value among VMS pings using dplyr}
\usage{
dc_split_among_pings(
  tacsat,
  eflalo,
  variable = "all",
  level = c("day", "ICESrectangle", "trip"),
  by = NULL
)
}
\arguments{
\item{tacsat}{Data frame of VMS pings. Must include at least: SI_STATE, SI_DATE, SI_TIME, FT_REF, VE_REF, LE_RECT, (and optionally a weighting column).}

\item{eflalo}{Data frame of logbook trips. Must include at least: FT_REF, VE_REF, FT_DDAT, FT_DTIME, FT_LDAT, FT_LTIME, LE_KG, LE_EURO, LE_RECT.}

\item{variable}{Which variable(s) to split: "all" (default), "value", or "kgs".}

\item{level}{Character vector of grouping levels. Can include any of c("day", "ICESrectangle", "trip"). Default: all.}

\item{by}{Optional. Name of a tacsat column to use as a weight for splitting (e.g., "INTV" for time interval). If NULL, splits equally.}
}
\value{
Data frame of fishing pings with assigned catch/value columns (Assigned_KG, Assigned_EURO).
}
\description{
This function mimics the main logic of vmstools::splitAmongPings, but is written purely with dplyr verbs.
It links VMS ping data (tacsat) to logbook trip data (eflalo) and distributes the reported catch and/or value
across the relevant VMS pings, optionally weighted by a given column (e.g., time interval).
}
\details{
The function supports splitting at different hierarchical levels: by trip, rectangle, and/or day.
The default is to split by all available levels. Only fishing pings (`SI_STATE == 1`) are assigned catch/value.


- The function performs a left join between tacsat and eflalo on the grouping columns derived from `level`.
- For each group (e.g., unique day, rectangle, trip), catch and/or value are distributed among pings, either equally or weighted by the `by` column.
- Only pings with SI_STATE == 1 (fishing) will be assigned catch/value.
- No "conserve" logic is implemented: only pings that can be matched to logbook trips receive catch/value.
- The function expects date columns in "dd/mm/yyyy" format and time columns as "HH:MM".
- Only dplyr, lubridate, and base R are used.
}
\examples{
# Minimal example with two rectangles and two days:
eflalo <- tibble::tibble(
  VE_REF   = "V001",
  FT_REF   = 101,
  FT_DDAT  = c("01/09/2025", "02/09/2025"),
  FT_DTIME = c("06:00", "06:00"),
  FT_LDAT  = c("01/09/2025", "02/09/2025"),
  FT_LTIME = c("20:00", "20:00"),
  LE_CDAT  = c("01/09/2025", "02/09/2025"),
  LE_RECT  = c("32F1", "32F2"),
  LE_KG    = c(300, 500),
  LE_EURO  = c(600, 1000)
)
tacsat <- tibble::tibble(
  VE_REF   = rep("V001", 8),
  FT_REF   = rep(101, 8),
  SI_DATE  = c("01/09/2025","01/09/2025","01/09/2025","01/09/2025",
               "02/09/2025","02/09/2025","02/09/2025","02/09/2025"),
  SI_TIME  = c("08:00","12:00","16:00","20:00",
               "08:00","12:00","16:00","20:00"),
  LE_RECT  = c("32F1","32F1","32F2","32F2",
               "32F2","32F2","32F1","32F1"),
  SI_STATE = rep(1, 8),
  INTV     = c(2, 4, 4, 2, 2, 4, 4, 2)
)
result <- dc_split_among_pings(
  tacsat = tacsat,
  eflalo = eflalo,
  variable = "all",
  level = c("day", "ICESrectangle", "trip"),
  by = "INTV"
)
# View with print(head(result))

}
\author{
Einar HjÃ¶rleifsson, Copilot
}
